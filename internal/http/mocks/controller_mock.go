// Code generated by MockGen. DO NOT EDIT.
// Source: todo-app/internal/http (interfaces: Controller)
//
// Generated by this command:
//
//	mockgen -destination mocks/controller_mock.go -package mocks . Controller
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockController is a mock of Controller interface.
type MockController struct {
	ctrl     *gomock.Controller
	recorder *MockControllerMockRecorder
}

// MockControllerMockRecorder is the mock recorder for MockController.
type MockControllerMockRecorder struct {
	mock *MockController
}

// NewMockController creates a new mock instance.
func NewMockController(ctrl *gomock.Controller) *MockController {
	mock := &MockController{ctrl: ctrl}
	mock.recorder = &MockControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockController) EXPECT() *MockControllerMockRecorder {
	return m.recorder
}

// CreateRoutes mocks base method.
func (m *MockController) CreateRoutes(arg0 *gin.RouterGroup) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateRoutes", arg0)
}

// CreateRoutes indicates an expected call of CreateRoutes.
func (mr *MockControllerMockRecorder) CreateRoutes(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRoutes", reflect.TypeOf((*MockController)(nil).CreateRoutes), arg0)
}
